import { build } from 'esbuild';
import process from "process";
import builtins from "builtin-modules";
import sveltePlugin from 'esbuild-svelte';
import { sveltePreprocess } from 'svelte-preprocess';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

build({
    banner: {
        js: banner,
    },
    entryPoints: ['src/main.ts'],
    bundle: true,
    metafile: true,
    plugins: [
        sveltePlugin({
            compilerOptions: { css: 'injected' },
            preprocess: sveltePreprocess(),
        }),
        {
            name: 'alias',
            setup(build) {
                build.onResolve({ filter: /^\$components\// }, args => {
                    return { path: path.resolve(__dirname, 'src/components', args.path.slice('$components/'.length)) };
                });
            },
        },
    ],
    loader: {
        '.ts': 'ts',
        '.json': 'json',
    },
    external: [
        'obsidian',
        'electron',
        '@codemirror/autocomplete',
        '@codemirror/collab',
        '@codemirror/commands',
        '@codemirror/language',
        '@codemirror/lint',
        '@codemirror/search',
        '@codemirror/state',
        '@codemirror/view',
        '@lezer/common',
        '@lezer/highlight',
        '@lezer/lr',
        ...builtins
    ],
    format: 'cjs',
    target: 'node20',
    platform: 'node',
    logLevel: "debug",
    sourcemap: prod ? false : 'inline',
    treeShaking: true,
    outfile: 'dist/main.js',
    minify: prod,
})
.then(() => {
    console.log('Build succeeded.');
})
.catch((error) => {
    console.error('Build failed:', error);
    process.exit(1);
});
